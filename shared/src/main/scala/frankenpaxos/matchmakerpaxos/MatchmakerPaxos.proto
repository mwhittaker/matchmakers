// A protocol cheatsheet, similar to [1].
//
//   Client      Leader    Acceptor  Matchmaker
//      | -------> |          |          |       ClientRequest
//      |          | ---------^--------> |       MatchRequest
//      |          | <--------^--------- |       MatchReply
//      |          | -------> |          |       Phase1a
//      |          | <------- |          |       Phase1b
//      |          | -------> |          |       Phase2a
//      |          | <------- |          |       Phase2b
//      | <------- |          |          |       ClientReply
//      |          | <--------^--------- |       MatchmakerNack
//      |          | <------- |          |       AcceptorNack
//
// [1]: https://ndpsoftware.com/git-cheatsheet.html

syntax = "proto2";

package frankenpaxos.matchmakerpaxos;

import "scalapb/scalapb.proto";
import "frankenpaxos/quorums/QuorumSystem.proto";

option (scalapb.options) = {
  package_name: "frankenpaxos.matchmakerpaxos"
  flat_package: true
};

// Helper messages. ////////////////////////////////////////////////////////////
message AcceptorGroup {
  option (scalapb.message).annotations =
    "@scala.scalajs.js.annotation.JSExportAll";

  required int32 round = 1;
  required quorums.QuorumSystemProto quorum_system = 2;
}

message Phase1bVote {
  option (scalapb.message).annotations =
    "@scala.scalajs.js.annotation.JSExportAll";

  required int32 vote_round = 1;
  required string vote_value = 2;
}

// Protocol messages. //////////////////////////////////////////////////////////
message ClientRequest {
  option (scalapb.message).annotations =
    "@scala.scalajs.js.annotation.JSExportAll";

  required string v = 1;
}

message MatchRequest {
  option (scalapb.message).annotations =
    "@scala.scalajs.js.annotation.JSExportAll";

  required AcceptorGroup acceptor_group = 1;
}

message MatchReply {
  option (scalapb.message).annotations =
    "@scala.scalajs.js.annotation.JSExportAll";

  required int32 round = 1;
  required int32 matchmaker_index = 2;
  repeated AcceptorGroup acceptor_group = 3;
}

message Phase1a {
  option (scalapb.message).annotations =
    "@scala.scalajs.js.annotation.JSExportAll";

  required int32 round = 1;
}

message Phase1b {
  option (scalapb.message).annotations =
    "@scala.scalajs.js.annotation.JSExportAll";

  required int32 round = 1;
  required int32 acceptor_index = 2;
  optional Phase1bVote vote = 3;
}

message Phase2a {
  option (scalapb.message).annotations =
    "@scala.scalajs.js.annotation.JSExportAll";

  required int32 round = 1;
  required string value = 2;
}

message Phase2b {
  option (scalapb.message).annotations =
    "@scala.scalajs.js.annotation.JSExportAll";

  required int32 round = 1;
  required int32 acceptor_index = 2;
}

message ClientReply {
  option (scalapb.message).annotations =
    "@scala.scalajs.js.annotation.JSExportAll";

  required string chosen = 1;
}

message MatchmakerNack {
  option (scalapb.message).annotations =
    "@scala.scalajs.js.annotation.JSExportAll";

  required int32 round = 1;
}

message AcceptorNack {
  option (scalapb.message).annotations =
    "@scala.scalajs.js.annotation.JSExportAll";

  required int32 round = 1;
}

// Inbound messages. ///////////////////////////////////////////////////////////
message ClientInbound {
  oneof request {
    ClientReply client_reply = 1;
  }
}

message LeaderInbound {
  oneof request {
    ClientRequest client_request = 1;
    MatchReply match_reply = 2;
    Phase1b phase1b = 3;
    Phase2b phase2b = 4;
    MatchmakerNack matchmaker_nack = 5;
    AcceptorNack acceptor_nack = 6;
  }
}

message MatchmakerInbound {
  oneof request {
    MatchRequest match_request = 1;
  }
}

message AcceptorInbound {
  oneof request {
    Phase1a phase1a = 1;
    Phase2a phase2a = 2;
  }
}
